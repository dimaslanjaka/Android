import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.appdistribution'

static def getDate(format) {
    if (format == null) {
        format = 'yyyyMMddHHmmss'
    }
    return new Date().format(format)
}

int MILLIS_IN_MINUTE = 1000 * 60;
int minutesSinceEpoch = (int) ((int) System.currentTimeMillis() / MILLIS_IN_MINUTE)
def revision = 'git rev-list --count HEAD'.execute().text.trim()
def hash = 'git rev-parse --short HEAD'.execute().text.trim()
def reversion = "r${revision}.${hash}"
def VCode = 2
def VName = VCode + ".1.1." + getDate()
def outputPathName = "D:\\Workspaces\\Android\\Android\\app\\bundle.apk"
def PackageName = "com.dimaslanjaka.youtube"
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
//load keystore signing
def keystorePropertiesFile = rootProject.file("app/keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

task generateCommitMessage {
    doLast({ ->
        println "Generating release notes (release-notes.txt)"
        def releaseNotes = new File('release-notes.txt')
        def readmeNotes = new File('app/release/readme.md')
        readmeNotes.delete()
        readmeNotes << "## [[ Build ${VName} ]]\n" +
                "### Apk Information:\n" +
                "- app-debug.apk unminified resources\n" +
                "- app-release.apk minified resources\n" +
                "- Builded On ${getDate("yyyy-MM-dd HH:mm:ss")}\n" +
                "### Release Notes:\n"
        releaseNotes.delete()
        releaseNotes << "[[ Build ${VName}: ]]\n"
        def cmdLine = "git log --format=%B" // -n 1
        def procCommit = cmdLine.execute()
        List<String> listx = new ArrayList<>();
        procCommit.in.eachLine { line ->
            if (!listx.contains(line)) {
                releaseNotes << line + "\n"
                readmeNotes << "- " + line + "\n"
                System.out.println(line)
            }
            listx.add(line);
        }
        releaseNotes << "\n\n\n"
    });
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    //useLibrary 'org.apache.http.legacy'
    ext {
        compose_version = "0.1.0-dev07"
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        //compose true
        viewBinding true
    }

    /*
    compileOptions {
        incremental true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
     */

    defaultConfig {
        applicationId PackageName
        minSdkVersion 19
        targetSdkVersion 30
        versionCode VCode
        versionName VName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.Launcher.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        all { variant ->
            resValue "string", "app_version", VName
            resValue "string", "app_release_date", getDate('yyyy-MM-dd HH:mm:ss')
            buildConfigField "String", "GitHash", "\"${getGitHash()}\""
        }
        release { variant ->
            debuggable false
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Tools"

            zipAlignEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true
        }

        debugmin {
            minifyEnabled true
            //shrinkResources true
            //zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //applicationIdSuffix = '.min'
            resValue "string", "app_name", "Tools Debug Minify"
        }

        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //applicationIdSuffix = '.dev'
            resValue "string", "app_name", "Tools Debug"
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                /*
                println "*** ${variant.name.capitalize()} Delete previous build folder ***"
                delete "$projectDir/${variant.name}/"
                 */

                def taskSuffix = variant.name.capitalize()
                def assembleTaskName = "assemble$taskSuffix"
                def runTasks = gradle.startParameter.taskNames

                // generate release notes
                def updateMsg = new File('app/release/release-notes.txt')
                updateMsg.delete()
                def releaseNotes = new File('release-notes.txt')
                def readmeNotes = new File('app/release/readme.md')
                readmeNotes.delete()
                readmeNotes << "## [[ Build ${VName} ]]\n" +
                        "### Apk Information:\n" +
                        "- app-debug.apk unminified resources\n" +
                        "- app-release.apk minified resources\n" +
                        "- Builded On ${getDate("yyyy-MM-dd HH:mm:ss")}\n" +
                        "### Release Notes:\n"
                releaseNotes.delete()
                releaseNotes << "[[ Build ${VName}: ]]\n"
                def cmdLine = "git log --format=%B" // -n 1
                def procCommit = cmdLine.execute()
                List<String> listx = new ArrayList<>();
                procCommit.in.eachLine { line ->
                    if (!listx.contains(line)) {
                        if (line.trim().length() > 0){
                            System.out.println(line)
                            updateMsg << "- " + line + "\n"
                            readmeNotes << "- " + line + "\n"
                            releaseNotes << "- " + line + "\n"
                        }
                    }
                    listx.add(line);
                }

                if (':app:assembleRelease' in runTasks) {
                    if (tasks.findByName(assembleTaskName)) {
                        println "*** ${variant.name.capitalize()} Create info update ***"
                        mkdir "$projectDir/${variant.name}/"
                        new File(projectDir, "${variant.name}/update.json").text = """
{"variant": "${variant.name.capitalize()}", "version": "$VName",
"date": "${new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())}",
"package": "$PackageName",
"url":"https://github.com/dimaslanjaka/Android/tree/master/app/release"}
""".trim()
                    }
                }
            }
        }
    }

    /*
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libassmidi.so'
        pickFirst 'lib/x86/libassmidi.so'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
     */

    // Delete large build log files from ~/.gradle/daemon/X.X/daemon-XXX.out.log
    // Source: https://discuss.gradle.org/t/gradle-daemon-produces-a-lot-of-logs/9905
    def gradle = project.getGradle()
    new File("${gradle.getGradleUserHomeDir().getAbsolutePath()}/daemon/${gradle.getGradleVersion()}").listFiles().each {
        if (it.getName().endsWith('.out.log')) {
            println("Deleting gradle log file: ${it}") // Optional debug output
            it.delete()
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "androidx.navigation:navigation-ui:2.3.0"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.legacy:legacy-preference-v14:1.0.0"
    implementation "androidx.preference:preference:1.1.1"
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    // firebase and google play
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-ads:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    //implementation 'com.google.firebase:firebase-messaging:9.2.0'
    implementation 'com.google.firebase:firebase-config:17.0.0'
    implementation 'com.google.firebase:firebase-analytics:17.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'
    implementation 'com.google.firebase:firebase-database:17.0.0'
    // recaptcha
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'

    //youtube data api v3 dependency
    //excluding org.apache.httpcomponents so as to resolve anonymity
    implementation('com.google.apis:google-api-services-youtube:v3-rev99-1.17.0-rc') {
        exclude group: 'org.apache.httpcomponents'
    }
    //google client for android api dependency
    //excluding org.apache.httpcomponents so as to resolve anonymity
    implementation('com.google.api-client:google-api-client-android:1.30.10') {
        exclude group: 'org.apache.httpcomponents'
    }

    // https://mvnrepository.com/artifact/io.appium/java-client
    //implementation group: 'io.appium', name: 'java-client', version: '5.0.4'
    //androidTestImplementation 'io.appium:java-client:5.0.4'

    // https://mvnrepository.com/artifact/org.openqa.selenium/selenium
    //implementation group: 'org.openqa.selenium', name: 'selenium', version: '0.8.1', ext: 'pom'

    // Material Dialog Library
    //implementation 'com.shreyaspatil:MaterialDialog:2.1'
    // Lottie Animation Library
    //implementation 'com.airbnb.android:lottie:3.4.1'

    //permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    //math
    // https://mvnrepository.com/artifact/org.mariuszgromada.math/MathParser.org-mXparser
    //implementation group: 'org.mariuszgromada.math', name: 'MathParser.org-mXparser', version: '4.0.0'

    //download manager
    //implementation "androidx.tonyodev.fetch2:xfetch2:3.1.4"
    //implementation 'xyz.nulldev.huandroid:huandroid:2.30.01'
    //implementation "cz.msebera.android:httpclient:4.5.8"

    // https://mvnrepository.com/artifact/org.apache.maven/maven-artifact check version
    implementation group: 'org.apache.maven', name: 'maven-artifact', version: '3.6.3'
    //html parser
    implementation 'org.jsoup:jsoup:1.13.1'
    // json parser
    implementation 'com.google.code.gson:gson:2.8.6'

    //simplify network monitoring
    //implementation 'com.novoda:merlin:1.2.0'
    //implementation 'org.aspectj:aspectjrt:1.9.6'
    implementation 'com.googlecode.mp4parser:isoparser:1.1.22'
    implementation 'com.google.android.material:material:1.3.0-alpha02'

    // ButterKnife for view binding
    //implementation 'com.jakewharton:butterknife:10.2.3'
    //annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    // Glide for image loading
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
    //implementation 'com.github.duanhong169:colorpicker:1.1.6'
    implementation('com.github.evgenyneu:js-evaluator-for-android:v5.0.0') {
        exclude module: 'appcompat-v7'
    }

    implementation 'com.google.crypto.tink:tink-android:1.4.0'

    // sniper dependencies start
    implementation 'com.adjust.sdk:adjust-android:4.24.0'
    implementation 'commons-cli:commons-cli:20040117.000000'
    implementation 'commons-codec:commons-codec:20041127.091804'
    implementation 'commons-io:commons-io:20030203.000550'
    //implementation "net.morimekta.utils:android-util:3.0.1"
    //implementation "com.google.android:android:2.3.1"
    //implementation "io.soluble.pjb:php-java-bridge:7.1.3"
    //implementation "org.jetbrains:annotations:16.0.2"
    // sniper dependencies end

    //http
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.8.1'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.8.1")
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.pixplicity.sharp:library:1.1.0'
    implementation 'com.android.volley:volley:1.1.1'

    // debug bridge
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
}
